@using Microsoft.AspNetCore.Identity
@using PurpleIK.Entities
@using PurpleIK.UI.Areas.CompanyManager.Models.VM.CompanyVM
@model List<IndexVM> // Kullanacağınız model tipini belirtin
@{
    ViewData["Title"] = "Home";
}
<div class="page-header">
    <h3 class="page-title">
        <span class="page-title-icon bg-gradient-primary text-white me-2">
            <i class="mdi mdi-home"></i>
        </span> Anasayfa
    </h3>
</div>

<div class="row">
    <div class="col-md-12 grid-margin stretch-card d-flex flex-column justify-content-between">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title" align="center"><span style="color: #9a55ff ;font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif ;position: relative;">Çalışanlar</span></h4>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead class="thead-dark">
                            <tr>
                                <th>Profil Resmi</th>
                                <th>Ad Soyad</th>
                                <th>Rolü</th>
                                <th>Departman</th>
                                <th>Başlama Tarihi</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var employeeVM in Model.Take(3))
                            {
                                foreach (var item in employeeVM.IndexItems)
                                {
                                    <tr>
                                        <td>
                                            <a class="nav-link count-indicator dropdown-toggle" id="messageDropdown" href="#" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="mdi mdi-account"></i>
                                            </a>
                                            <div id="photoDropdown" class="dropdown-menu dropdown-menu-left navbar-dropdown preview-list" aria-labelledby="messageDropdown" style="width: 200px; height: 200px;">
                                                <style>
                                                    #photoDropdown.dropdown-menu-left {
                                                        left: auto;
                                                        right: 0;
                                                    }

                                                    .img-thumbnail {
                                                        max-width: 100%; /* Resmi 100% genişliğe kadar sığdır */
                                                        max-height: 100%; /* Resmi 100% yüksekliğe kadar sığdır */
                                                    }

                                                    .preview-item-content img {
                                                        width: auto; /* Otomatik genişlik */
                                                        height: auto; /* Otomatik yükseklik */
                                                        max-width: 100%; /* Resmi 100% genişliğe kadar sığdır */
                                                        max-height: 100%; /* Resmi 100% yüksekliğe kadar sığdır */
                                                    }
                                                </style>
                                                <div class="preview-item-content d-flex align-items-start flex-column justify-content-center photo">
                                                    @if (!string.IsNullOrEmpty(item.Picture))
                                                    {
                                                        <img src="@item.Picture" class="img-thumbnail" alt="Profile Photos" style="width: 100%;height : 100%;" />
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            @(char.ToUpper(item.FirstName[0]) + item.FirstName.Substring(1)) @(char.ToUpper(item.LastName[0]) + item.LastName.Substring(1))
                                        </td>
                                        <td>
                                            @if (item.Role == "companymanager")
                                            {
                                                <span>Şirket Yöneticisi</span>
                                            }
                                            else
                                            {
                                                <span>Çalışan</span>
                                            }
                                        </td>
                                        <td>@item.Department</td>
                                        <td>@(item.StartDate.HasValue ? item.StartDate.Value.ToShortDateString() : "")</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div align="right">
                    <a asp-area="CompanyManager" asp-controller="EmployeeManager" asp-action="ListEmployee" class="btn btn-block btn-lg btn-gradient-primary mt-4" style="text-decoration: none;" align="right">Tüm Çalışanlar</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6 grid-margin stretch-card d-flex flex-column justify-content-between">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title" align="center"><span style="color: #9a55ff ;font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif ;position: relative;">Yaklaşan Doğum Günleri</span></h4>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Çalışan</th>
                                <th>İzin Tarihi</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var employeeVM in Model.Take(1))
                            {
                                foreach (var person in employeeVM.Persons)
                                {
                                    <tr>
                                        <td>@person.FirstName @person.LastName</td>
                                        <td>@person.BirthDate.Value.ToString("dd.MM")</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 grid-margin stretch-card d-flex flex-column justify-content-between">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title" align="center"><span style="color: #9a55ff ;font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif ;position: relative;">Yaklaşan İzinler</span></h4>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Çalışan</th>
                                <th>İzin Tarihi</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var employeeVM in Model.Take(1))
                            {
                                foreach (var person in employeeVM.OtherEmployeesPermissions)
                                {
                                    <tr>

                                        <td>@person.Person.FirstName @person.Person.LastName</td>
                                        <td><span style="opacity: 0.6;">@person.NumberOfDays</span><span style="opacity: 0.6;">g</span> @person.StartDate.Value.ToString("dd.MM")</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="card h-100">
        <div class="card-body">
            <h4 class="card-title" align="center"><span style="color: #9a55ff ;font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif ;position: relative;">Bu Haftaki Vardiyalarım</span></h4>
            <hr />
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Adı</th>
                            <th>Tarih</th>
                            <th>Saat Aralığı</th>
                            <th>İlk Molam</th>
                            <th>İkinci Molam</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Take(1))
                        {
                            foreach (var person in item.Shifts)
                            {
                                <tr>
                                    <td>@person.Name</td>
                                    <td>@person.ShiftDate.Value.ToShortDateString()</td>
                                    <td>@person.StartTime-@person.EndTime</td>
                                    <td>@person.BreakTimeOneStart-@person.BreakTimeOneEnd</td>
                                    <td>@person.BreakTimeSecondStart-@person.BreakTimeSecondEnd</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    private async Task<string> GetRoleNameAsync(Guid? userId)
    {
        var userManager = Context.RequestServices.GetRequiredService<UserManager<AppUser>>();
        var user = await userManager.FindByIdAsync(userId.ToString());
        var roleNames = await userManager.GetRolesAsync(user);
        return roleNames.FirstOrDefault();
    }
    private async Task<string?> GetManagerNameAsync(Guid? userId)
    {
        var userManager = Context.RequestServices.GetRequiredService<UserManager<AppUser>>();
        var user = await userManager.FindByIdAsync(userId.ToString());

        // Kullanıcının yönetici rolüne sahip olup olmadığını kontrol et
        if (await userManager.IsInRoleAsync(user, "companymanager"))
        {
            // Kullanıcının bağlı olduğu kişiyi al
            var person = user.Persons.FirstOrDefault();
            if (person != null && person.CompanyId.HasValue)
            {
                // Aynı şirketteki diğer kullanıcıları al
                var otherUsersInCompany = userManager.Users.Where(u => u.Persons.Any(p => p.CompanyId == person.CompanyId && p.Id != person.Id));
                // Diğer kullanıcılar arasında yönetici var mı kontrol et
                var otherAdmin = otherUsersInCompany.FirstOrDefault(u => userManager.IsInRoleAsync(u, "companymanager").Result);
                if (otherAdmin != null)
                {
                    // Diğer yöneticiyi döndür
                    return $"{otherAdmin.Persons.FirstOrDefault()?.FirstName} {otherAdmin.Persons.FirstOrDefault()?.LastName}";
                }
            }
        }

        return null;
    }

}

<script>
    document.querySelectorAll('.profile-img').forEach(function (img) {
        img.style.display = 'none'; // Resimleri başlangıçta gizle
        img.style.transform = 'scale(1.2)'; // Resmi büyüt
        img.style.transition = 'transform 0.3s ease'; // Geçiş efekti ekle
    });

    document.querySelectorAll('.profile-icon-container').forEach(function (container) {
        container.addEventListener('mouseenter', function () {
            // Fare simgenin üzerine geldiğinde resmi göster ve daha da büyüt
            var img = this.querySelector('.profile-img');
            img.style.display = 'inline-block';
            img.style.transform = 'scale(2.5)'; // Resmi daha da büyüt
        });

        container.addEventListener('mouseleave', function () {
            // Fare simgenin üzerinden çekildiğinde resmi küçült ve gizle
            var img = this.querySelector('.profile-img');
            img.style.transform = 'scale(1.2)'; // Resmi küçült
            setTimeout(function () {
                img.style.display = 'none';
            }, 300); // 300ms bekleyerek resmin küçülmesini sağla
        });
    });
</script>
